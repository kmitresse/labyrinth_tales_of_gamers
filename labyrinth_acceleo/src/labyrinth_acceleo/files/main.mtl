[comment encoding = UTF-8 /]
[module main('http://labyrinthtalesofgamers.com/')]

[import labyrinth_acceleo::queries::generate_entity_list/]
[import labyrinth_acceleo::queries::generate_room_list/]
[import labyrinth_acceleo::queries::generate_linked_rooms/]


[template public generateMainClass(aGame : Game)]

[file ('app/Main.java', false, 'UTF-8')]
package app;
import java.util.ArrayList;

public class Main { 
	public static Action move = new Action(Action.MOVE);
 	public static Action talk = new Action(Action.TALK);
 	public static Action propose = new Action(Action.PROPOSE);
 	public static Action ask_hint = new Action(Action.ASK_HINT);
 	public static Action read = new Action(Action.READ);

	public static void main(String['[]'/] args){
		
	    // Hints creation
		[aGame.generateHintList()/]

	    // Non players characters creation
		[aGame.generateNpcList()/]
		
	    // Rooms creation
	    [aGame.generateRoomList()/]
	
	    // Link rooms
	    [aGame.generateLinkedRooms()/]	

	    //Game creation
	    Game game = new Game("[aGame.player.name/]", [aGame.player.currentRoom.backendName/], npcs.size(), "[aGame.title/]: [aGame.subtitle/]", "[aGame.prologue/]", "[aGame.epilogue/]");
	    for (Room room : rooms) {
	      	game.addRoom(room);
	    }
	    //Management de la game
	    game.introduce();
	    while (!game.isTerminated()) {
	      	System.out.println("\n--------------------------------------------------\n");
	      	game.getPlayer().getCurrentRoom().introduce();
	      	game.getPlayer().getCurrentRoom().selectAction();
	    }
	    System.out.println("\n--------------------------------------------------\n");
	    game.terminate();
	}
}
[/file]
[/template]